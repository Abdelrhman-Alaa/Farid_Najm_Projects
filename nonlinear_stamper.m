function [G_linearized, RHS_linearized] = nonlinear_stamper(Circuit)
dim = Circuit.no_of_nodes + Circuit.no_of_group2_elements;
G_linearized = zeros(dim,dim);
RHS_linearized = zeros(dim,1);
if isfield(Circuit,'dio')
    for i = 1:length(Circuit.dio)
        if Circuit.dio{i}.pnode ~= 0
            G_linearized(Circuit.dio{i}.pnode,Circuit.dio{i}.pnode) = ...
                G_linearized(Circuit.dio{i}.pnode,Circuit.dio{i}.pnode) ...
                + Circuit.dio{i}.Geq;
            RHS_linearized(Circuit.dio{i}.pnode) = ...
                RHS_linearized(Circuit.dio{i}.pnode) - Circuit.dio{i}.Ieq;
        end
        if Circuit.dio{i}.nnode ~= 0
            G_linearized(Circuit.dio{i}.nnode,Circuit.dio{i}.nnode) = ...
                G_linearized(Circuit.dio{i}.nnode,Circuit.dio{i}.nnode) ...
                + Circuit.dio{i}.Geq;
            RHS_linearized(Circuit.dio{i}.nnode) = ...
                RHS_linearized(Circuit.dio{i}.nnode) + Circuit.dio{i}.Ieq;
        end
        if Circuit.dio{i}.pnode ~= 0 && Circuit.dio{i}.nnode ~= 0
            G_linearized(Circuit.dio{i}.pnode,Circuit.dio{i}.nnode) = ...
                G_linearized(Circuit.dio{i}.pnode,Circuit.dio{i}.nnode) ...
                - Circuit.dio{i}.Geq;
            G_linearized(Circuit.dio{i}.nnode,Circuit.dio{i}.pnode) = ...
                G_linearized(Circuit.dio{i}.nnode,Circuit.dio{i}.pnode) ...
                - Circuit.dio{i}.Geq;
        end
    end
end
if isfield(Circuit,'mos')
    for i = 1:length(Circuit.mos)
        if Circuit.mos{i}.drain ~= 0
            G_linearized(Circuit.mos{i}.drain,Circuit.mos{i}.drain) = ...
                G_linearized(Circuit.mos{i}.drain,Circuit.mos{i}.drain) ...
                + Circuit.mos{i}.gds;
            if Circuit.mos{i}.source ~= 0
                G_linearized(Circuit.mos{i}.source,Circuit.mos{i}.drain) = ...
                    G_linearized(Circuit.mos{i}.source,Circuit.mos{i}.drain) ...
                    - Circuit.mos{i}.gds;
                G_linearized(Circuit.mos{i}.drain,Circuit.mos{i}.source) = ...
                    G_linearized(Circuit.mos{i}.drain,Circuit.mos{i}.source) ...
                    - (Circuit.mos{i}.gds + Circuit.mos{i}.gm);
                G_linearized(Circuit.mos{i}.source,Circuit.mos{i}.source) = ...
                    G_linearized(Circuit.mos{i}.source,Circuit.mos{i}.source) ...
                    + (Circuit.mos{i}.gds + Circuit.mos{i}.gm);
                if Circuit.mos{i}.gate ~= 0
                    G_linearized(Circuit.mos{i}.source,Circuit.mos{i}.gate) = ...
                        G_linearized(Circuit.mos{i}.source,Circuit.mos{i}.gate) ...
                        - Circuit.mos{i}.gm;
                end
            end
            if Circuit.mos{i}.gate ~= 0
                G_linearized(Circuit.mos{i}.drain,Circuit.mos{i}.gate) = ...
                    G_linearized(Circuit.mos{i}.drain,Circuit.mos{i}.gate) ...
                    + Circuit.mos{i}.gm;
            end
            RHS_linearized(Circuit.mos{i}.drain) = ...
                RHS_linearized(Circuit.mos{i}.drain) - Circuit.mos{i}.Ieq;        
        elseif Circuit.mos{i}.source ~= 0
            G_linearized(Circuit.mos{i}.source,Circuit.mos{i}.source) = ...
                G_linearized(Circuit.mos{i}.source,Circuit.mos{i}.source) ...
                + (Circuit.mos{i}.gds + Circuit.mos{i}.gm);
            if Circuit.mos{i}.gate ~= 0
                G_linearized(Circuit.mos{i}.source,Circuit.mos{i}.gate) = ...
                    G_linearized(Circuit.mos{i}.source,Circuit.mos{i}.gate) ...
                    - Circuit.mos{i}.gm;
            end
            RHS_linearized(Circuit.mos{i}.source) = ...
                RHS_linearized(Circuit.mos{i}.source) + Circuit.mos{i}.Ieq;
        end
    end
end
if isfield(Circuit,'bjt')
    for i = 1:length(Circuit.bjt)
        if Circuit.bjt{i}.collector ~= 0
            G_linearized(Circuit.bjt{i}.collector,Circuit.bjt{i}.collector) = ...
                G_linearized(Circuit.bjt{i}.collector,Circuit.bjt{i}.collector) ...
                + Circuit.bjt{i}.gcc;
            RHS_linearized(Circuit.bjt{i}.collector) = ...
                RHS_linearized(Circuit.bjt{i}.collector) - Circuit.bjt{i}.Iceq;
        end
        if Circuit.bjt{i}.base ~= 0
            G_linearized(Circuit.bjt{i}.base,Circuit.bjt{i}.base) = ...
                G_linearized(Circuit.bjt{i}.base,Circuit.bjt{i}.base) ...
                + Circuit.bjt{i}.gcc + Circuit.bjt{i}.gee ...
                - Circuit.bjt{i}.gce - Circuit.bjt{i}.gec;
            RHS_linearized(Circuit.bjt{i}.base) = ...
                RHS_linearized(Circuit.bjt{i}.base) + Circuit.bjt{i}.Iceq + Circuit.bjt{i}.Ieeq;
        end
        if Circuit.bjt{i}.emitter ~= 0
            G_linearized(Circuit.bjt{i}.emitter,Circuit.bjt{i}.emitter) = ...
                G_linearized(Circuit.bjt{i}.emitter,Circuit.bjt{i}.emitter) ...
                + Circuit.bjt{i}.gee;
            RHS_linearized(Circuit.bjt{i}.emitter) = ...
                RHS_linearized(Circuit.bjt{i}.emitter) - Circuit.bjt{i}.Ieeq;
        end
        if Circuit.bjt{i}.base ~= 0 && Circuit.bjt{i}.emitter ~= 0
            G_linearized(Circuit.bjt{i}.base,Circuit.bjt{i}.emitter) = ...
                G_linearized(Circuit.bjt{i}.base,Circuit.bjt{i}.emitter) ...
                + Circuit.bjt{i}.gce - Circuit.bjt{i}.gee;
            G_linearized(Circuit.bjt{i}.emitter,Circuit.bjt{i}.base) = ...
                G_linearized(Circuit.bjt{i}.emitter,Circuit.bjt{i}.base) ...
                + Circuit.bjt{i}.gec - Circuit.bjt{i}.gee;
        end
        if Circuit.bjt{i}.base ~= 0 && Circuit.bjt{i}.collector ~= 0
            G_linearized(Circuit.bjt{i}.base,Circuit.bjt{i}.collector) = ...
                G_linearized(Circuit.bjt{i}.base,Circuit.bjt{i}.collector) ...
                + Circuit.bjt{i}.gec - Circuit.bjt{i}.gcc;
            G_linearized(Circuit.bjt{i}.collector,Circuit.bjt{i}.base) = ...
                G_linearized(Circuit.bjt{i}.collector,Circuit.bjt{i}.base) ...
                + Circuit.bjt{i}.gce - Circuit.bjt{i}.gcc;
        end
        if Circuit.bjt{i}.emitter ~= 0 && Circuit.bjt{i}.collector ~= 0
            G_linearized(Circuit.bjt{i}.emitter,Circuit.bjt{i}.collector) = ...
                G_linearized(Circuit.bjt{i}.emitter,Circuit.bjt{i}.collector) ...
                - Circuit.bjt{i}.gec;
            G_linearized(Circuit.bjt{i}.collector,Circuit.bjt{i}.emitter) = ...
                G_linearized(Circuit.bjt{i}.collector,Circuit.bjt{i}.emitter) ...
                - Circuit.bjt{i}.gce;
        end
    end
end